package rottasimulaattori.game.utils;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.Test;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

import static org.junit.Assert.*;
public class MapHandlerTest {

    MapHandler mapHandler;
    File file;

    @Before
    public void setUp() {
        mapHandler = new MapHandler();
        file = new File("testMap.txt");
        System.out.println(file.getAbsoluteFile());
    }

    @Test
    public void LoadingAMap() {
        String[] testLevel = new String[] {
                "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "00000C0000000000000000000000000000000000C0000000000000000000000000000000000000000000000C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "000001000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "00000000000000000000000000000000000000000000000000000000000000000000000C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000C000000000000000000000000000000000000000000000000",
                "000C00000000000000000000000000000000000000000000000000000000C00000000000000011000000000000001111000000000000000000000000000000000001000000000000000000000000000000000000000000000000",
                "00011100000000000000000000000000000010000000000C00000000000010000000000000000000000000000000000000000000000000000000000000000000000000G000000000000000000000000000000000000000000000",
                "001111001110000000000000000000000001000000000001000000100000000000011110000000000000000100000000000011000000000000000000000000100000001000000000000000000000000000000000000000000000",
                "0011111C00000111000000000000000000000000000000100000000001100011000000000000C0000100000000000000000000001000000000000000010000000000000000000000000000000000000000000000000000000000",
                "000000010000000000011100011000000011100011111000001110000000000000000110000010000000000100000000000000001100000000001000000000000000000000000000000000000000000000000000000000000000",
                "111111110011110001111100111111000100000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000000000000000000000"
        };
        try {
            PrintWriter pw = new PrintWriter(file);
            for (String line : testLevel) {
                pw.println(line);
            }
            pw.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        try {
            mapHandler.loadMap(file);
        } catch (Exception e) {
            e.printStackTrace();
        }
        for (int i = 0; i < Level.level.length; i++) {
            assertEquals(testLevel[i], Level.level[i]);
        }
    }

    @Test
    public void SavingSavesAMap() {
        mapHandler.saveLevel(file);
        String level[] = new String[Level.level.length];
        try {
            Scanner scanner = new Scanner(file);
            int y = 0;
            while (scanner.hasNextLine()) {
                level[y] = scanner.nextLine();
                y++;
            }
            scanner.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        for (int i = 0; i < Level.level.length; i++) {
            assertEquals(level[i], Level.level[i]);
        }
    }

    @After
    public void deleteTestFile() {
        if (file.exists()) {
            file.delete();
        }
    }
}